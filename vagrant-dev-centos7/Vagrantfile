# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'
vagrantConfig = YAML.load_file 'Vagrantfile.config.yml'

# Config
Vagrant.configure(2) do |config|

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: vagrantConfig['ip']

  ## Mount local "./shared/" patho into boxÂ´s "/vagrant-box-shared" path
  config.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
  # config.vm.synced_folder "./scripts", "/home/vagrant/scripts", type: "nfs"
  config.vm.synced_folder vagrantConfig['synced_folder']['host_path'], vagrantConfig['synced_folder']['guest_path'], owner:"vagrant", mount_options:['dmode=770', 'fmode=660'], type: "nfs"

  # Provider-specific configuration
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.cpus = 2
    vb.memory = "4096"
  end

  # update
  config.vm.provision "shell", path: "./scripts/01_init_system.sh", args: vagrantConfig['magento']['timezone']

  # PHP
  # PHP 7 -> php version 7.0.5 is not working with magento2
  # config.vm.provision "shell", path: "./scrips/02_install_php_7_0.sh", args: vagrantConfig['magento']['timezone']
  # PHP 5.6
  config.vm.provision "shell", path: "./scripts/02_install_php_5_6.sh", args: vagrantConfig['magento']['timezone'], privileged: false

  # MySQL 5.6
  config.vm.provision "shell", path: "./scripts/03_install_mysql56.sh", args: "#{vagrantConfig['mysql']['password']}", privileged: false

  # apache
  config.vm.provision "shell", path: "./scripts/04_install_apache2.sh", privileged: false

  # magento2

  # set memeory limit for development
  config.vm.provision "shell", inline: "sudo sed -i \"s|memory_limit =.*|memory_limit = 2G|\" /etc/php.ini"

  # init magento2 with composer in html folder
  config.vm.provision "shell", path: "./scripts/05_init_composer.sh",
                      args: [vagrantConfig['http_basic']['repo_magento_com']['username'],
                             vagrantConfig['http_basic']['repo_magento_com']['password'],
                             vagrantConfig['github_oauth']['github_com']]

  # clear and link html folder
  config.vm.provision "shell", inline: "sudo rm -r /var/www/html"
  config.vm.provision "shell", inline: "sudo ln -s #{vagrantConfig['synced_folder']['guest_path']} /var/www/html"

  # create project and set read/write permissions
  config.vm.provision "shell", inline: "/usr/local/bin/composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition /var/www/html/"
  config.vm.provision "shell", inline: "sudo find #{vagrantConfig['synced_folder']['guest_path']} -type d -exec chmod 770 {} \\; && sudo find #{vagrantConfig['synced_folder']['guest_path']} -type f -exec chmod 660 {} \\; && sudo chmod u+x /var/www/html/bin/magento"

  # Set file system ownership and permissions
  config.vm.provision "shell", inline: "sudo chown -R :apache /var/www/html"
  config.vm.provision "shell", inline: "sudo chown -R :vagrant #{vagrantConfig['synced_folder']['guest_path']}"

  # add phpifo for dev
  config.vm.provision "shell", inline: "echo -e \"<?php\nphpinfo();\n?>\"  > /var/www/html/phpinfo.php"

  # install magento 2
  config.vm.provision "shell", path: "./scripts/06_install_magento.sh",
                      args: [vagrantConfig['mysql']['username'],
                             vagrantConfig['mysql']['password'],
                             vagrantConfig['mysql']['host'],
                             vagrantConfig['magento']['db_name'],
                             vagrantConfig['magento']['base_url'],
                             vagrantConfig['magento']['admin_firstname'],
                             vagrantConfig['magento']['admin_lastname'],
                             vagrantConfig['magento']['admin_email'],
                             vagrantConfig['magento']['admin_user'],
                             vagrantConfig['magento']['admin_password'],
                             vagrantConfig['magento']['backend_frontname'],
                             vagrantConfig['magento']['language'],
                             vagrantConfig['magento']['currency'],
                             vagrantConfig['magento']['timezone'],
                             vagrantConfig['magento']['fixture']
                      ]

  config.vm.provision "shell", inline: "sudo chown -R :apache /var/www/html/"

end
